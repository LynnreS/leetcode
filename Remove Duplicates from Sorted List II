/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *deleteDuplicates(ListNode *head) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(!head) return NULL;
        ListNode ret(0);
        ListNode *tail = &ret;

        while(head) {
            if(!head->next || head->val != head->next->val) {
                tail->next = head;
                tail = head;                
                head = head->next;
                tail->next = NULL;
                continue;
            }
            while(head->next && head->val == head->next->val ) {
                ListNode *tmp = head;
head = head->next;
delete tmp;
tmp = NULL;
            }
            ListNode *tmp = head;
            head = head->next;
delete tmp;
tmp = NULL;

        }
        
        return ret.next;
    }
};
