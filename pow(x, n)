double pow(double x, int n) {
    if (n == 0) return 1.0;
    if (n == 1) return x;
    if (n == -1) return 1/x;
    // Compute x^{n/2} and store the result into a temporary
    // variable to avoid unnecessary computing
    double half = pow(x, n / 2);
    if (n % 2 == 0)
        return half * half;
    else if (n > 0)
        return half * half * x;
    else
        return half * half / x;
}
class Solution {
public:
    double p(double x, int n){
        if(n == 0) return 1;
        if(n == 1) return x;
		if(n == -1) return 1/x;
        double t = p(x, n/2);
        if(n%2){
            return x * t * t;
        }
        else
            return t * t;
    }
    double pow(double x, int n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(n == 0) return 1;
        if(n == 1) return x;
        double ret;
        if(x < 0 && (n%2)) ret = -1;
        else ret = 1;
        x = abs(x);  
        if(x == 0 || x == 1){
            return ret*x;
        }
        ret = ret*p(x, n);
        if(n > 0)
            return ret;
        else 
            return 1/ret;
    }
};
