/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    int len(ListNode *head){
        int ret = 0;
        while(head){
            ret++;
            head = head->next;
        }
        return ret;
    }
    ListNode *rotateRight(ListNode *head, int k) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(head == NULL) return head;
        int l = len(head);
        k = k % l;
        if(k == 0) return head;
        
       
        int target = l - k;
        int j = 1;
        ListNode *tmp1 = head;
        ListNode *tmp2;
        while(j <= target){
            tmp2 = head;
            head = head->next;
            j++;
        }
        tmp2->next = NULL;
        tmp2 = head;
        while(tmp2->next){
            tmp2 = tmp2->next;
        }
        tmp2->next = tmp1;
        return head;
    }
};
