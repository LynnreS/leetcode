class Solution {
public:
	vector<vector<int> > threeSum(vector<int> &num) {
		// Start typing your C/C++ solution below
		// DO NOT write int main() function
		vector<vector<int> >ret;
		if (num.size() >= 3)
		{
			sort(num.begin(), num.end());
			
			for(int i = 0; i < num.size()-2; i++)
			{
				if (i > 0 && (num[i] == num[i-1]))
				{
					continue;
				}
				for (int j = i+1; j < num.size()-1; j++)
				{
					if (j > i+1 && (num[j] == num[j-1]))
					{
						continue;
					}
					int low = j+1;
					int high = num.size() - 1;
					int target = -(num[i] + num[j]);

					if (target < num[low] || target > num[high])
					{
							continue;
					}
					while(low <= high)
					{
						int k = (low + high) / 2;
						if (num[k] > target)
						{
							high = k -1;
						}
						else if(num[k] < target)
						{
							low = k + 1;
						}
						else
						{
							vector<int> triplet;
							triplet.push_back(num[i]);																	
							triplet.push_back(num[k]);						
							triplet.push_back(num[j]);
							sort(triplet.begin(), triplet.end());
							ret.push_back(triplet);
							triplet.clear();
							break;
							
						}	
					}
				}
			}
		}
		sort(ret.begin(), ret.end());
		ret.erase(unique(ret.begin(), ret.end()), ret.end());
		return ret;
	}
};
