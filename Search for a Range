class Solution {
public:
    vector<int> searchRange(int A[], int n, int target) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<int> ret;
        if( n == 0 ) return ret;
        int low = 0;
        int high = n - 1;
        while(low <= high)
        {
            int i = (low + high) / 2;
            if(A[i] > target)
                high = i - 1;
            else if(A[i] < target)
                low = i + 1;
            else
            {
                low = high = i;
                int j = i - 1;
                while(j >= 0 && A[j] == target)
                    j--;
                low = j + 1;
                j = i + 1;
                while(j < n && A[j] == target)
                    j++;
                high = j - 1;
                break;
            }
        }
        if(low < 0 || high >=n || A[low] != target)
        {
            low = high = -1;
        }
        ret.push_back(low);
        ret.push_back(high);
    }
};
