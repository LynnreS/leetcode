class Solution {
public:
    bool isValidSudoku(vector<vector<char> > &board) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<vector<bool> > row, col, grid;
        row.resize(9, vector<bool>(9, false));
        col.resize(9, vector<bool>(9, false));
        grid.resize(9, vector<bool>(9, false));
        for(int i = 0; i < 9; i++){
            for(int j = 0; j < 9; j++){
                if(board[i][j] == '.') continue;
                if(row[i][board[i][j]-'1']) return false;
                if(col[j][board[i][j]-'1']) return false;
                if(grid[(i/3)*3+j/3][board[i][j]-'1']) return false;
                row[i][board[i][j]-'1'] = col[j][board[i][j]-'1'] = grid[(i/3)*3+j/3][board[i][j]-'1'] = true;
            }
        }
        return true;
    }
};
