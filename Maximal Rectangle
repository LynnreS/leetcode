class Solution {
public:
    int maximalRectangle(vector<vector<char> > &matrix) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int m = matrix.size();
        if(!m) return 0;
        int n = matrix[0].size();
        if(!n) return 0;
        vector<int> L(n);
        vector<int> R(n, n);
        vector<int> height(n);
        int ret = 0;
        for(int i = 0; i < m; i++) {
            int maxl = 0, minr = n;
            for(int j = 0; j < n; j++) {
                if(matrix[i][j] == '0') {
                    height[j] = 0;
                    maxl = j+1;
                    L[j] = 0;
                    R[j] = n;
                }
                else {
                    height[j]++;
                    L[j] = max(L[j], maxl);
                }
            }
            for(int j = n-1; j >= 0; j--) {
                if(matrix[i][j] == '0') {
                    minr = j;
                }
                else {
                    R[j] = min(R[j], minr);
                    ret = max(ret, height[j]*(R[j]-L[j]));
                }
            }
        }
        return ret;
    }
};
