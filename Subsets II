class Solution {
public:
    void sub(vector<int> s, int idx, vector<vector<int> > &ret, vector<int> &str) {
        
        ret.push_back(str);
    
        for(int i = idx; i < s.size(); i++) {
            if(i!=idx && s[i]==s[i-1]) continue;
            str.push_back(s[i]);
            sub(s, i+1, ret, str);
            str.pop_back();
        }
    }

    vector<vector<int> > subsetsWithDup(vector<int> &S) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        sort(S.begin(), S.end());
        vector<int> str;
        vector<vector<int> > ret;
        sub(S, 0, ret, str);
        return ret;
    }
};
