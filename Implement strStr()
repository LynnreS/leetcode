class Solution {
public:
    void next_kmp( char *needle, vector<int> &next ) {
		int i = 0;
		int j = -1;
		next[0] = -1;
        int m = strlen(needle);
		while(i < m - 1){
			if(j == -1 || needle[i] == needle[j]){
				i++;
				j++;
				//  if(i == strlen(needle))
				//    return;
				if(needle[i] == needle[j])
					next[i] = next[j];
				else
					next[i] = j;
			}
			else
				j = next[j];
		}
	}
	char *strStr(char *haystack, char *needle) {
		// Start typing your C/C++ solution below
		// DO NOT write int main() function
		int h = strlen(haystack);
		int n = strlen(needle);
		if(n == 0) return haystack;
		if(h == 0) return NULL;
		int i = -1;
		int j = -1;
		vector<int> next(n+1);
		next_kmp(needle, next);
		while(i < h && j < n){
    		if(j == -1 || haystack[i] == needle[j]){
				i++;
				j++;
			}
			else{
				if(j == next[j]){
					i++;
				}
				else
					j = next[j];
			}
		}
		if(j == strlen(needle))
			return haystack + i - j;
		else
			return NULL;
	}
};
