class Solution {
public:
    int longestValidParentheses(string s) {
		// Start typing your C/C++ solution below
		// DO NOT write int main() function
		stack<int> st;
		int maxLen = 0;
        int lastIdx = -1;
		for (int i = 0; i < s.length(); i++)
		{
			if (s[i] == '(')
			{
				st.push(i);
			}
			else
			{
				if (st.empty())
				{
					lastIdx = i;
				}
				else
				{
					st.pop();
					if (st.empty())
					{
						maxLen = max(maxLen, i-lastIdx);
					}
					else
						maxLen = max(maxLen, i-st.top());
				}
			}
		}
		return maxLen;
	}
};

